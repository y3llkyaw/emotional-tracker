name: Flutter Build & Release

on:
  push:
    branches:
      - main

permissions: 
  contents: write   # Grant permission to write contents (needed for releases)

jobs:
  build:
    name: Build Flutter APK
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Cache Flutter SDK
      - name: Cache Flutter SDK
        uses: actions/cache@v3
        with:
          path: ${{ runner.tool_cache }}/flutter
          key: flutter-${{ runner.os }}-${{ hashFiles('.flutter-version') }}
          restore-keys: |
            flutter-${{ runner.os }}-

      # Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.2"
          cache: true

      # Get dependencies
      - name: Clean Old Builds
        run: flutter clean
      # Get dependencies
      - name: Get dependencies
        run: flutter pub get

      - name: Decode Keystore
        run: echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > android/app/release.keystore

      - name: Check Keystore SHA-1 & SHA-256
        run: keytool -list -v -keystore android/app/release.keystore -alias ${{ secrets.KEY_ALIAS }} -storepass ${{ secrets.KEYSTORE_PASSWORD }}
     
      # Build Release APK
      - name: Build Release APK
        run: flutter build apk --release

      # Upload APK Artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      # Create GitHub Release and upload APK
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/app-release.apk"
          tag: "v1.0.${{ github.run_number }}"
          name: "Release v1.0.${{ github.run_number }}"
          body: "New release generated from the main branch ðŸš€"
          draft: false
          prerelease: false